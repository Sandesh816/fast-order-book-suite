// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: order.proto
// Protobuf C++ Version: 5.29.3

#include "order.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace fastob {
              template <typename>
PROTOBUF_CONSTEXPR TopRequest::TopRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopRequestDefaultTypeInternal() {}
  union {
    TopRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopRequestDefaultTypeInternal _TopRequest_default_instance_;

inline constexpr TopReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : best_bid_{0},
        best_ask_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TopReply::TopReply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TopReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopReplyDefaultTypeInternal() {}
  union {
    TopReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopReplyDefaultTypeInternal _TopReply_default_instance_;

inline constexpr SubmitMarketRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : client_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_buy_{false},
        qty_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubmitMarketRequest::SubmitMarketRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubmitMarketRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitMarketRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitMarketRequestDefaultTypeInternal() {}
  union {
    SubmitMarketRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitMarketRequestDefaultTypeInternal _SubmitMarketRequest_default_instance_;

inline constexpr SubmitLimitRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : client_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_buy_{false},
        price_{0},
        qty_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubmitLimitRequest::SubmitLimitRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubmitLimitRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitLimitRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitLimitRequestDefaultTypeInternal() {}
  union {
    SubmitLimitRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitLimitRequestDefaultTypeInternal _SubmitLimitRequest_default_instance_;

inline constexpr SubmitCancelRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : client_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_buy_{false},
        price_{0},
        qty_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubmitCancelRequest::SubmitCancelRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubmitCancelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitCancelRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitCancelRequestDefaultTypeInternal() {}
  union {
    SubmitCancelRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitCancelRequestDefaultTypeInternal _SubmitCancelRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR StatsRequest::StatsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct StatsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatsRequestDefaultTypeInternal() {}
  union {
    StatsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatsRequestDefaultTypeInternal _StatsRequest_default_instance_;

inline constexpr StatsReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : total_orders_{::uint64_t{0u}},
        total_rejected_{::uint64_t{0u}},
        avg_latency_us_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StatsReply::StatsReply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StatsReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatsReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatsReplyDefaultTypeInternal() {}
  union {
    StatsReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatsReplyDefaultTypeInternal _StatsReply_default_instance_;

inline constexpr OrderMeta::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : client_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gateway_order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        risk_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recv_unix_ns_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderMeta::OrderMeta(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderMetaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderMetaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderMetaDefaultTypeInternal() {}
  union {
    OrderMeta _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderMetaDefaultTypeInternal _OrderMeta_default_instance_;

inline constexpr MarketOrder::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        meta_{nullptr},
        is_buy_{false},
        qty_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MarketOrder::MarketOrder(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MarketOrderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarketOrderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarketOrderDefaultTypeInternal() {}
  union {
    MarketOrder _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarketOrderDefaultTypeInternal _MarketOrder_default_instance_;

inline constexpr LimitOrder::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        meta_{nullptr},
        is_buy_{false},
        price_{0},
        qty_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LimitOrder::LimitOrder(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LimitOrderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LimitOrderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LimitOrderDefaultTypeInternal() {}
  union {
    LimitOrder _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LimitOrderDefaultTypeInternal _LimitOrder_default_instance_;

inline constexpr CancelOrder::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        meta_{nullptr},
        is_buy_{false},
        price_{0},
        qty_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CancelOrder::CancelOrder(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CancelOrderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelOrderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelOrderDefaultTypeInternal() {}
  union {
    CancelOrder _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelOrderDefaultTypeInternal _CancelOrder_default_instance_;

inline constexpr Ack::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        meta_{nullptr},
        ok_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Ack::Ack(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AckDefaultTypeInternal() {}
  union {
    Ack _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AckDefaultTypeInternal _Ack_default_instance_;
}  // namespace fastob
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_order_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_order_2eproto = nullptr;
const ::uint32_t
    TableStruct_order_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fastob::OrderMeta, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fastob::OrderMeta, _impl_.client_id_),
        PROTOBUF_FIELD_OFFSET(::fastob::OrderMeta, _impl_.gateway_order_id_),
        PROTOBUF_FIELD_OFFSET(::fastob::OrderMeta, _impl_.recv_unix_ns_),
        PROTOBUF_FIELD_OFFSET(::fastob::OrderMeta, _impl_.risk_status_),
        PROTOBUF_FIELD_OFFSET(::fastob::LimitOrder, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fastob::LimitOrder, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fastob::LimitOrder, _impl_.is_buy_),
        PROTOBUF_FIELD_OFFSET(::fastob::LimitOrder, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::fastob::LimitOrder, _impl_.qty_),
        PROTOBUF_FIELD_OFFSET(::fastob::LimitOrder, _impl_.meta_),
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::fastob::MarketOrder, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fastob::MarketOrder, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fastob::MarketOrder, _impl_.is_buy_),
        PROTOBUF_FIELD_OFFSET(::fastob::MarketOrder, _impl_.qty_),
        PROTOBUF_FIELD_OFFSET(::fastob::MarketOrder, _impl_.meta_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::fastob::CancelOrder, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fastob::CancelOrder, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fastob::CancelOrder, _impl_.is_buy_),
        PROTOBUF_FIELD_OFFSET(::fastob::CancelOrder, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::fastob::CancelOrder, _impl_.qty_),
        PROTOBUF_FIELD_OFFSET(::fastob::CancelOrder, _impl_.meta_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fastob::SubmitLimitRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fastob::SubmitLimitRequest, _impl_.client_id_),
        PROTOBUF_FIELD_OFFSET(::fastob::SubmitLimitRequest, _impl_.is_buy_),
        PROTOBUF_FIELD_OFFSET(::fastob::SubmitLimitRequest, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::fastob::SubmitLimitRequest, _impl_.qty_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fastob::SubmitMarketRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fastob::SubmitMarketRequest, _impl_.client_id_),
        PROTOBUF_FIELD_OFFSET(::fastob::SubmitMarketRequest, _impl_.is_buy_),
        PROTOBUF_FIELD_OFFSET(::fastob::SubmitMarketRequest, _impl_.qty_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fastob::SubmitCancelRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fastob::SubmitCancelRequest, _impl_.client_id_),
        PROTOBUF_FIELD_OFFSET(::fastob::SubmitCancelRequest, _impl_.is_buy_),
        PROTOBUF_FIELD_OFFSET(::fastob::SubmitCancelRequest, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::fastob::SubmitCancelRequest, _impl_.qty_),
        PROTOBUF_FIELD_OFFSET(::fastob::Ack, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fastob::Ack, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fastob::Ack, _impl_.ok_),
        PROTOBUF_FIELD_OFFSET(::fastob::Ack, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::fastob::Ack, _impl_.meta_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fastob::TopRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fastob::TopReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fastob::TopReply, _impl_.best_bid_),
        PROTOBUF_FIELD_OFFSET(::fastob::TopReply, _impl_.best_ask_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fastob::StatsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fastob::StatsReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fastob::StatsReply, _impl_.total_orders_),
        PROTOBUF_FIELD_OFFSET(::fastob::StatsReply, _impl_.total_rejected_),
        PROTOBUF_FIELD_OFFSET(::fastob::StatsReply, _impl_.avg_latency_us_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::fastob::OrderMeta)},
        {12, 24, -1, sizeof(::fastob::LimitOrder)},
        {28, 39, -1, sizeof(::fastob::MarketOrder)},
        {42, 54, -1, sizeof(::fastob::CancelOrder)},
        {58, -1, -1, sizeof(::fastob::SubmitLimitRequest)},
        {70, -1, -1, sizeof(::fastob::SubmitMarketRequest)},
        {81, -1, -1, sizeof(::fastob::SubmitCancelRequest)},
        {93, 104, -1, sizeof(::fastob::Ack)},
        {107, -1, -1, sizeof(::fastob::TopRequest)},
        {115, -1, -1, sizeof(::fastob::TopReply)},
        {125, -1, -1, sizeof(::fastob::StatsRequest)},
        {133, -1, -1, sizeof(::fastob::StatsReply)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::fastob::_OrderMeta_default_instance_._instance,
    &::fastob::_LimitOrder_default_instance_._instance,
    &::fastob::_MarketOrder_default_instance_._instance,
    &::fastob::_CancelOrder_default_instance_._instance,
    &::fastob::_SubmitLimitRequest_default_instance_._instance,
    &::fastob::_SubmitMarketRequest_default_instance_._instance,
    &::fastob::_SubmitCancelRequest_default_instance_._instance,
    &::fastob::_Ack_default_instance_._instance,
    &::fastob::_TopRequest_default_instance_._instance,
    &::fastob::_TopReply_default_instance_._instance,
    &::fastob::_StatsRequest_default_instance_._instance,
    &::fastob::_StatsReply_default_instance_._instance,
};
const char descriptor_table_protodef_order_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013order.proto\022\006fastob\"c\n\tOrderMeta\022\021\n\tcl"
    "ient_id\030\001 \001(\t\022\030\n\020gateway_order_id\030\002 \001(\t\022"
    "\024\n\014recv_unix_ns\030\003 \001(\003\022\023\n\013risk_status\030\004 \001"
    "(\t\"Y\n\nLimitOrder\022\016\n\006is_buy\030\001 \001(\010\022\r\n\005pric"
    "e\030\002 \001(\005\022\013\n\003qty\030\003 \001(\005\022\037\n\004meta\030\n \001(\0132\021.fas"
    "tob.OrderMeta\"K\n\013MarketOrder\022\016\n\006is_buy\030\001"
    " \001(\010\022\013\n\003qty\030\002 \001(\005\022\037\n\004meta\030\n \001(\0132\021.fastob"
    ".OrderMeta\"Z\n\013CancelOrder\022\016\n\006is_buy\030\001 \001("
    "\010\022\r\n\005price\030\002 \001(\005\022\013\n\003qty\030\003 \001(\005\022\037\n\004meta\030\n "
    "\001(\0132\021.fastob.OrderMeta\"S\n\022SubmitLimitReq"
    "uest\022\021\n\tclient_id\030\001 \001(\t\022\016\n\006is_buy\030\002 \001(\010\022"
    "\r\n\005price\030\003 \001(\005\022\013\n\003qty\030\004 \001(\005\"E\n\023SubmitMar"
    "ketRequest\022\021\n\tclient_id\030\001 \001(\t\022\016\n\006is_buy\030"
    "\002 \001(\010\022\013\n\003qty\030\003 \001(\005\"T\n\023SubmitCancelReques"
    "t\022\021\n\tclient_id\030\001 \001(\t\022\016\n\006is_buy\030\002 \001(\010\022\r\n\005"
    "price\030\003 \001(\005\022\013\n\003qty\030\004 \001(\005\"C\n\003Ack\022\n\n\002ok\030\001 "
    "\001(\010\022\017\n\007message\030\002 \001(\t\022\037\n\004meta\030\003 \001(\0132\021.fas"
    "tob.OrderMeta\"\014\n\nTopRequest\".\n\010TopReply\022"
    "\020\n\010best_bid\030\001 \001(\005\022\020\n\010best_ask\030\002 \001(\005\"\016\n\014S"
    "tatsRequest\"R\n\nStatsReply\022\024\n\014total_order"
    "s\030\001 \001(\004\022\026\n\016total_rejected\030\002 \001(\004\022\026\n\016avg_l"
    "atency_us\030\003 \001(\0012\277\001\n\016EngineInternal\022(\n\005Li"
    "mit\022\022.fastob.LimitOrder\032\013.fastob.Ack\022*\n\006"
    "Market\022\023.fastob.MarketOrder\032\013.fastob.Ack"
    "\022*\n\006Cancel\022\023.fastob.CancelOrder\032\013.fastob"
    ".Ack\022+\n\003Top\022\022.fastob.TopRequest\032\020.fastob"
    ".TopReply2\233\002\n\rGatewayPublic\0226\n\013SubmitLim"
    "it\022\032.fastob.SubmitLimitRequest\032\013.fastob."
    "Ack\0228\n\014SubmitMarket\022\033.fastob.SubmitMarke"
    "tRequest\032\013.fastob.Ack\0228\n\014SubmitCancel\022\033."
    "fastob.SubmitCancelRequest\032\013.fastob.Ack\022"
    "+\n\003Top\022\022.fastob.TopRequest\032\020.fastob.TopR"
    "eply\0221\n\005Stats\022\024.fastob.StatsRequest\032\022.fa"
    "stob.StatsReplyB\nZ\010fastobpbb\006proto3"
};
static ::absl::once_flag descriptor_table_order_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_order_2eproto = {
    false,
    false,
    1355,
    descriptor_table_protodef_order_2eproto,
    "order.proto",
    &descriptor_table_order_2eproto_once,
    nullptr,
    0,
    12,
    schemas,
    file_default_instances,
    TableStruct_order_2eproto::offsets,
    file_level_enum_descriptors_order_2eproto,
    file_level_service_descriptors_order_2eproto,
};
namespace fastob {
// ===================================================================

class OrderMeta::_Internal {
 public:
};

OrderMeta::OrderMeta(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fastob.OrderMeta)
}
inline PROTOBUF_NDEBUG_INLINE OrderMeta::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::fastob::OrderMeta& from_msg)
      : client_id_(arena, from.client_id_),
        gateway_order_id_(arena, from.gateway_order_id_),
        risk_status_(arena, from.risk_status_),
        _cached_size_{0} {}

OrderMeta::OrderMeta(
    ::google::protobuf::Arena* arena,
    const OrderMeta& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderMeta* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.recv_unix_ns_ = from._impl_.recv_unix_ns_;

  // @@protoc_insertion_point(copy_constructor:fastob.OrderMeta)
}
inline PROTOBUF_NDEBUG_INLINE OrderMeta::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : client_id_(arena),
        gateway_order_id_(arena),
        risk_status_(arena),
        _cached_size_{0} {}

inline void OrderMeta::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.recv_unix_ns_ = {};
}
OrderMeta::~OrderMeta() {
  // @@protoc_insertion_point(destructor:fastob.OrderMeta)
  SharedDtor(*this);
}
inline void OrderMeta::SharedDtor(MessageLite& self) {
  OrderMeta& this_ = static_cast<OrderMeta&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.client_id_.Destroy();
  this_._impl_.gateway_order_id_.Destroy();
  this_._impl_.risk_status_.Destroy();
  this_._impl_.~Impl_();
}

inline void* OrderMeta::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderMeta(arena);
}
constexpr auto OrderMeta::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderMeta),
                                            alignof(OrderMeta));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderMeta::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderMeta_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderMeta::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderMeta>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderMeta::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderMeta>(), &OrderMeta::ByteSizeLong,
            &OrderMeta::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderMeta, _impl_._cached_size_),
        false,
    },
    &OrderMeta::kDescriptorMethods,
    &descriptor_table_order_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderMeta::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 61, 2> OrderMeta::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fastob::OrderMeta>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string risk_status = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OrderMeta, _impl_.risk_status_)}},
    // string client_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OrderMeta, _impl_.client_id_)}},
    // string gateway_order_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OrderMeta, _impl_.gateway_order_id_)}},
    // int64 recv_unix_ns = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderMeta, _impl_.recv_unix_ns_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(OrderMeta, _impl_.recv_unix_ns_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string client_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderMeta, _impl_.client_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string gateway_order_id = 2;
    {PROTOBUF_FIELD_OFFSET(OrderMeta, _impl_.gateway_order_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 recv_unix_ns = 3;
    {PROTOBUF_FIELD_OFFSET(OrderMeta, _impl_.recv_unix_ns_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string risk_status = 4;
    {PROTOBUF_FIELD_OFFSET(OrderMeta, _impl_.risk_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\11\20\0\13\0\0\0"
    "fastob.OrderMeta"
    "client_id"
    "gateway_order_id"
    "risk_status"
  }},
};

PROTOBUF_NOINLINE void OrderMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fastob.OrderMeta)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  _impl_.gateway_order_id_.ClearToEmpty();
  _impl_.risk_status_.ClearToEmpty();
  _impl_.recv_unix_ns_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderMeta::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderMeta& this_ = static_cast<const OrderMeta&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderMeta::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderMeta& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:fastob.OrderMeta)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client_id = 1;
          if (!this_._internal_client_id().empty()) {
            const std::string& _s = this_._internal_client_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "fastob.OrderMeta.client_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string gateway_order_id = 2;
          if (!this_._internal_gateway_order_id().empty()) {
            const std::string& _s = this_._internal_gateway_order_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "fastob.OrderMeta.gateway_order_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 recv_unix_ns = 3;
          if (this_._internal_recv_unix_ns() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_recv_unix_ns(), target);
          }

          // string risk_status = 4;
          if (!this_._internal_risk_status().empty()) {
            const std::string& _s = this_._internal_risk_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "fastob.OrderMeta.risk_status");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:fastob.OrderMeta)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderMeta::ByteSizeLong(const MessageLite& base) {
          const OrderMeta& this_ = static_cast<const OrderMeta&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderMeta::ByteSizeLong() const {
          const OrderMeta& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:fastob.OrderMeta)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string client_id = 1;
            if (!this_._internal_client_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_id());
            }
            // string gateway_order_id = 2;
            if (!this_._internal_gateway_order_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_gateway_order_id());
            }
            // string risk_status = 4;
            if (!this_._internal_risk_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_risk_status());
            }
            // int64 recv_unix_ns = 3;
            if (this_._internal_recv_unix_ns() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_recv_unix_ns());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderMeta::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderMeta*>(&to_msg);
  auto& from = static_cast<const OrderMeta&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fastob.OrderMeta)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if (!from._internal_gateway_order_id().empty()) {
    _this->_internal_set_gateway_order_id(from._internal_gateway_order_id());
  }
  if (!from._internal_risk_status().empty()) {
    _this->_internal_set_risk_status(from._internal_risk_status());
  }
  if (from._internal_recv_unix_ns() != 0) {
    _this->_impl_.recv_unix_ns_ = from._impl_.recv_unix_ns_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderMeta::CopyFrom(const OrderMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fastob.OrderMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderMeta::InternalSwap(OrderMeta* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, &other->_impl_.client_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gateway_order_id_, &other->_impl_.gateway_order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.risk_status_, &other->_impl_.risk_status_, arena);
        swap(_impl_.recv_unix_ns_, other->_impl_.recv_unix_ns_);
}

::google::protobuf::Metadata OrderMeta::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LimitOrder::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LimitOrder>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LimitOrder, _impl_._has_bits_);
};

LimitOrder::LimitOrder(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fastob.LimitOrder)
}
inline PROTOBUF_NDEBUG_INLINE LimitOrder::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::fastob::LimitOrder& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LimitOrder::LimitOrder(
    ::google::protobuf::Arena* arena,
    const LimitOrder& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LimitOrder* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.meta_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fastob::OrderMeta>(
                              arena, *from._impl_.meta_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_buy_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_buy_),
           offsetof(Impl_, qty_) -
               offsetof(Impl_, is_buy_) +
               sizeof(Impl_::qty_));

  // @@protoc_insertion_point(copy_constructor:fastob.LimitOrder)
}
inline PROTOBUF_NDEBUG_INLINE LimitOrder::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LimitOrder::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, meta_),
           0,
           offsetof(Impl_, qty_) -
               offsetof(Impl_, meta_) +
               sizeof(Impl_::qty_));
}
LimitOrder::~LimitOrder() {
  // @@protoc_insertion_point(destructor:fastob.LimitOrder)
  SharedDtor(*this);
}
inline void LimitOrder::SharedDtor(MessageLite& self) {
  LimitOrder& this_ = static_cast<LimitOrder&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.meta_;
  this_._impl_.~Impl_();
}

inline void* LimitOrder::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LimitOrder(arena);
}
constexpr auto LimitOrder::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LimitOrder),
                                            alignof(LimitOrder));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LimitOrder::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LimitOrder_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LimitOrder::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LimitOrder>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LimitOrder::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LimitOrder>(), &LimitOrder::ByteSizeLong,
            &LimitOrder::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LimitOrder, _impl_._cached_size_),
        false,
    },
    &LimitOrder::kDescriptorMethods,
    &descriptor_table_order_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LimitOrder::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> LimitOrder::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LimitOrder, _impl_._has_bits_),
    0, // no _extensions_
    10, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966776,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fastob::LimitOrder>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_buy = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LimitOrder, _impl_.is_buy_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LimitOrder, _impl_.is_buy_)}},
    // int32 price = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LimitOrder, _impl_.price_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LimitOrder, _impl_.price_)}},
    // int32 qty = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LimitOrder, _impl_.qty_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(LimitOrder, _impl_.qty_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_buy = 1;
    {PROTOBUF_FIELD_OFFSET(LimitOrder, _impl_.is_buy_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 price = 2;
    {PROTOBUF_FIELD_OFFSET(LimitOrder, _impl_.price_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 qty = 3;
    {PROTOBUF_FIELD_OFFSET(LimitOrder, _impl_.qty_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .fastob.OrderMeta meta = 10;
    {PROTOBUF_FIELD_OFFSET(LimitOrder, _impl_.meta_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fastob::OrderMeta>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LimitOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:fastob.LimitOrder)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.meta_ != nullptr);
    _impl_.meta_->Clear();
  }
  ::memset(&_impl_.is_buy_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.qty_) -
      reinterpret_cast<char*>(&_impl_.is_buy_)) + sizeof(_impl_.qty_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LimitOrder::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LimitOrder& this_ = static_cast<const LimitOrder&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LimitOrder::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LimitOrder& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:fastob.LimitOrder)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool is_buy = 1;
          if (this_._internal_is_buy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_is_buy(), target);
          }

          // int32 price = 2;
          if (this_._internal_price() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_price(), target);
          }

          // int32 qty = 3;
          if (this_._internal_qty() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_qty(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .fastob.OrderMeta meta = 10;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.meta_, this_._impl_.meta_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:fastob.LimitOrder)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LimitOrder::ByteSizeLong(const MessageLite& base) {
          const LimitOrder& this_ = static_cast<const LimitOrder&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LimitOrder::ByteSizeLong() const {
          const LimitOrder& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:fastob.LimitOrder)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .fastob.OrderMeta meta = 10;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.meta_);
            }
          }
           {
            // bool is_buy = 1;
            if (this_._internal_is_buy() != 0) {
              total_size += 2;
            }
            // int32 price = 2;
            if (this_._internal_price() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_price());
            }
            // int32 qty = 3;
            if (this_._internal_qty() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_qty());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LimitOrder::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LimitOrder*>(&to_msg);
  auto& from = static_cast<const LimitOrder&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fastob.LimitOrder)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.meta_ != nullptr);
    if (_this->_impl_.meta_ == nullptr) {
      _this->_impl_.meta_ =
          ::google::protobuf::Message::CopyConstruct<::fastob::OrderMeta>(arena, *from._impl_.meta_);
    } else {
      _this->_impl_.meta_->MergeFrom(*from._impl_.meta_);
    }
  }
  if (from._internal_is_buy() != 0) {
    _this->_impl_.is_buy_ = from._impl_.is_buy_;
  }
  if (from._internal_price() != 0) {
    _this->_impl_.price_ = from._impl_.price_;
  }
  if (from._internal_qty() != 0) {
    _this->_impl_.qty_ = from._impl_.qty_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LimitOrder::CopyFrom(const LimitOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fastob.LimitOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LimitOrder::InternalSwap(LimitOrder* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LimitOrder, _impl_.qty_)
      + sizeof(LimitOrder::_impl_.qty_)
      - PROTOBUF_FIELD_OFFSET(LimitOrder, _impl_.meta_)>(
          reinterpret_cast<char*>(&_impl_.meta_),
          reinterpret_cast<char*>(&other->_impl_.meta_));
}

::google::protobuf::Metadata LimitOrder::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MarketOrder::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MarketOrder>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MarketOrder, _impl_._has_bits_);
};

MarketOrder::MarketOrder(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fastob.MarketOrder)
}
inline PROTOBUF_NDEBUG_INLINE MarketOrder::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::fastob::MarketOrder& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MarketOrder::MarketOrder(
    ::google::protobuf::Arena* arena,
    const MarketOrder& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MarketOrder* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.meta_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fastob::OrderMeta>(
                              arena, *from._impl_.meta_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_buy_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_buy_),
           offsetof(Impl_, qty_) -
               offsetof(Impl_, is_buy_) +
               sizeof(Impl_::qty_));

  // @@protoc_insertion_point(copy_constructor:fastob.MarketOrder)
}
inline PROTOBUF_NDEBUG_INLINE MarketOrder::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MarketOrder::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, meta_),
           0,
           offsetof(Impl_, qty_) -
               offsetof(Impl_, meta_) +
               sizeof(Impl_::qty_));
}
MarketOrder::~MarketOrder() {
  // @@protoc_insertion_point(destructor:fastob.MarketOrder)
  SharedDtor(*this);
}
inline void MarketOrder::SharedDtor(MessageLite& self) {
  MarketOrder& this_ = static_cast<MarketOrder&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.meta_;
  this_._impl_.~Impl_();
}

inline void* MarketOrder::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MarketOrder(arena);
}
constexpr auto MarketOrder::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MarketOrder),
                                            alignof(MarketOrder));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MarketOrder::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MarketOrder_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MarketOrder::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MarketOrder>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MarketOrder::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MarketOrder>(), &MarketOrder::ByteSizeLong,
            &MarketOrder::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MarketOrder, _impl_._cached_size_),
        false,
    },
    &MarketOrder::kDescriptorMethods,
    &descriptor_table_order_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MarketOrder::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 0, 2> MarketOrder::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MarketOrder, _impl_._has_bits_),
    0, // no _extensions_
    10, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966780,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fastob::MarketOrder>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 qty = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MarketOrder, _impl_.qty_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MarketOrder, _impl_.qty_)}},
    // bool is_buy = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MarketOrder, _impl_.is_buy_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MarketOrder, _impl_.is_buy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_buy = 1;
    {PROTOBUF_FIELD_OFFSET(MarketOrder, _impl_.is_buy_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 qty = 2;
    {PROTOBUF_FIELD_OFFSET(MarketOrder, _impl_.qty_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .fastob.OrderMeta meta = 10;
    {PROTOBUF_FIELD_OFFSET(MarketOrder, _impl_.meta_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fastob::OrderMeta>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MarketOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:fastob.MarketOrder)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.meta_ != nullptr);
    _impl_.meta_->Clear();
  }
  ::memset(&_impl_.is_buy_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.qty_) -
      reinterpret_cast<char*>(&_impl_.is_buy_)) + sizeof(_impl_.qty_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MarketOrder::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MarketOrder& this_ = static_cast<const MarketOrder&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MarketOrder::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MarketOrder& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:fastob.MarketOrder)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool is_buy = 1;
          if (this_._internal_is_buy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_is_buy(), target);
          }

          // int32 qty = 2;
          if (this_._internal_qty() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_qty(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .fastob.OrderMeta meta = 10;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.meta_, this_._impl_.meta_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:fastob.MarketOrder)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MarketOrder::ByteSizeLong(const MessageLite& base) {
          const MarketOrder& this_ = static_cast<const MarketOrder&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MarketOrder::ByteSizeLong() const {
          const MarketOrder& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:fastob.MarketOrder)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .fastob.OrderMeta meta = 10;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.meta_);
            }
          }
           {
            // bool is_buy = 1;
            if (this_._internal_is_buy() != 0) {
              total_size += 2;
            }
            // int32 qty = 2;
            if (this_._internal_qty() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_qty());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MarketOrder::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MarketOrder*>(&to_msg);
  auto& from = static_cast<const MarketOrder&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fastob.MarketOrder)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.meta_ != nullptr);
    if (_this->_impl_.meta_ == nullptr) {
      _this->_impl_.meta_ =
          ::google::protobuf::Message::CopyConstruct<::fastob::OrderMeta>(arena, *from._impl_.meta_);
    } else {
      _this->_impl_.meta_->MergeFrom(*from._impl_.meta_);
    }
  }
  if (from._internal_is_buy() != 0) {
    _this->_impl_.is_buy_ = from._impl_.is_buy_;
  }
  if (from._internal_qty() != 0) {
    _this->_impl_.qty_ = from._impl_.qty_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MarketOrder::CopyFrom(const MarketOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fastob.MarketOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MarketOrder::InternalSwap(MarketOrder* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MarketOrder, _impl_.qty_)
      + sizeof(MarketOrder::_impl_.qty_)
      - PROTOBUF_FIELD_OFFSET(MarketOrder, _impl_.meta_)>(
          reinterpret_cast<char*>(&_impl_.meta_),
          reinterpret_cast<char*>(&other->_impl_.meta_));
}

::google::protobuf::Metadata MarketOrder::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelOrder::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CancelOrder>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_._has_bits_);
};

CancelOrder::CancelOrder(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fastob.CancelOrder)
}
inline PROTOBUF_NDEBUG_INLINE CancelOrder::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::fastob::CancelOrder& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CancelOrder::CancelOrder(
    ::google::protobuf::Arena* arena,
    const CancelOrder& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CancelOrder* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.meta_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fastob::OrderMeta>(
                              arena, *from._impl_.meta_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_buy_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_buy_),
           offsetof(Impl_, qty_) -
               offsetof(Impl_, is_buy_) +
               sizeof(Impl_::qty_));

  // @@protoc_insertion_point(copy_constructor:fastob.CancelOrder)
}
inline PROTOBUF_NDEBUG_INLINE CancelOrder::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CancelOrder::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, meta_),
           0,
           offsetof(Impl_, qty_) -
               offsetof(Impl_, meta_) +
               sizeof(Impl_::qty_));
}
CancelOrder::~CancelOrder() {
  // @@protoc_insertion_point(destructor:fastob.CancelOrder)
  SharedDtor(*this);
}
inline void CancelOrder::SharedDtor(MessageLite& self) {
  CancelOrder& this_ = static_cast<CancelOrder&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.meta_;
  this_._impl_.~Impl_();
}

inline void* CancelOrder::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CancelOrder(arena);
}
constexpr auto CancelOrder::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CancelOrder),
                                            alignof(CancelOrder));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CancelOrder::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CancelOrder_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CancelOrder::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CancelOrder>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CancelOrder::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CancelOrder>(), &CancelOrder::ByteSizeLong,
            &CancelOrder::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_._cached_size_),
        false,
    },
    &CancelOrder::kDescriptorMethods,
    &descriptor_table_order_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CancelOrder::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> CancelOrder::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_._has_bits_),
    0, // no _extensions_
    10, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966776,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fastob::CancelOrder>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_buy = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CancelOrder, _impl_.is_buy_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_.is_buy_)}},
    // int32 price = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CancelOrder, _impl_.price_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_.price_)}},
    // int32 qty = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CancelOrder, _impl_.qty_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_.qty_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_buy = 1;
    {PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_.is_buy_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 price = 2;
    {PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_.price_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 qty = 3;
    {PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_.qty_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .fastob.OrderMeta meta = 10;
    {PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_.meta_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fastob::OrderMeta>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CancelOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:fastob.CancelOrder)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.meta_ != nullptr);
    _impl_.meta_->Clear();
  }
  ::memset(&_impl_.is_buy_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.qty_) -
      reinterpret_cast<char*>(&_impl_.is_buy_)) + sizeof(_impl_.qty_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CancelOrder::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CancelOrder& this_ = static_cast<const CancelOrder&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CancelOrder::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CancelOrder& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:fastob.CancelOrder)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool is_buy = 1;
          if (this_._internal_is_buy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_is_buy(), target);
          }

          // int32 price = 2;
          if (this_._internal_price() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_price(), target);
          }

          // int32 qty = 3;
          if (this_._internal_qty() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_qty(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .fastob.OrderMeta meta = 10;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.meta_, this_._impl_.meta_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:fastob.CancelOrder)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CancelOrder::ByteSizeLong(const MessageLite& base) {
          const CancelOrder& this_ = static_cast<const CancelOrder&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CancelOrder::ByteSizeLong() const {
          const CancelOrder& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:fastob.CancelOrder)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .fastob.OrderMeta meta = 10;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.meta_);
            }
          }
           {
            // bool is_buy = 1;
            if (this_._internal_is_buy() != 0) {
              total_size += 2;
            }
            // int32 price = 2;
            if (this_._internal_price() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_price());
            }
            // int32 qty = 3;
            if (this_._internal_qty() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_qty());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CancelOrder::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelOrder*>(&to_msg);
  auto& from = static_cast<const CancelOrder&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fastob.CancelOrder)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.meta_ != nullptr);
    if (_this->_impl_.meta_ == nullptr) {
      _this->_impl_.meta_ =
          ::google::protobuf::Message::CopyConstruct<::fastob::OrderMeta>(arena, *from._impl_.meta_);
    } else {
      _this->_impl_.meta_->MergeFrom(*from._impl_.meta_);
    }
  }
  if (from._internal_is_buy() != 0) {
    _this->_impl_.is_buy_ = from._impl_.is_buy_;
  }
  if (from._internal_price() != 0) {
    _this->_impl_.price_ = from._impl_.price_;
  }
  if (from._internal_qty() != 0) {
    _this->_impl_.qty_ = from._impl_.qty_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelOrder::CopyFrom(const CancelOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fastob.CancelOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelOrder::InternalSwap(CancelOrder* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_.qty_)
      + sizeof(CancelOrder::_impl_.qty_)
      - PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_.meta_)>(
          reinterpret_cast<char*>(&_impl_.meta_),
          reinterpret_cast<char*>(&other->_impl_.meta_));
}

::google::protobuf::Metadata CancelOrder::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubmitLimitRequest::_Internal {
 public:
};

SubmitLimitRequest::SubmitLimitRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fastob.SubmitLimitRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubmitLimitRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::fastob::SubmitLimitRequest& from_msg)
      : client_id_(arena, from.client_id_),
        _cached_size_{0} {}

SubmitLimitRequest::SubmitLimitRequest(
    ::google::protobuf::Arena* arena,
    const SubmitLimitRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubmitLimitRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_buy_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_buy_),
           offsetof(Impl_, qty_) -
               offsetof(Impl_, is_buy_) +
               sizeof(Impl_::qty_));

  // @@protoc_insertion_point(copy_constructor:fastob.SubmitLimitRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubmitLimitRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : client_id_(arena),
        _cached_size_{0} {}

inline void SubmitLimitRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_buy_),
           0,
           offsetof(Impl_, qty_) -
               offsetof(Impl_, is_buy_) +
               sizeof(Impl_::qty_));
}
SubmitLimitRequest::~SubmitLimitRequest() {
  // @@protoc_insertion_point(destructor:fastob.SubmitLimitRequest)
  SharedDtor(*this);
}
inline void SubmitLimitRequest::SharedDtor(MessageLite& self) {
  SubmitLimitRequest& this_ = static_cast<SubmitLimitRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.client_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubmitLimitRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubmitLimitRequest(arena);
}
constexpr auto SubmitLimitRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubmitLimitRequest),
                                            alignof(SubmitLimitRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubmitLimitRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubmitLimitRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubmitLimitRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubmitLimitRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubmitLimitRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubmitLimitRequest>(), &SubmitLimitRequest::ByteSizeLong,
            &SubmitLimitRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubmitLimitRequest, _impl_._cached_size_),
        false,
    },
    &SubmitLimitRequest::kDescriptorMethods,
    &descriptor_table_order_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubmitLimitRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 43, 2> SubmitLimitRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fastob::SubmitLimitRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 qty = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubmitLimitRequest, _impl_.qty_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitLimitRequest, _impl_.qty_)}},
    // string client_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitLimitRequest, _impl_.client_id_)}},
    // bool is_buy = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubmitLimitRequest, _impl_.is_buy_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitLimitRequest, _impl_.is_buy_)}},
    // int32 price = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubmitLimitRequest, _impl_.price_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitLimitRequest, _impl_.price_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string client_id = 1;
    {PROTOBUF_FIELD_OFFSET(SubmitLimitRequest, _impl_.client_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_buy = 2;
    {PROTOBUF_FIELD_OFFSET(SubmitLimitRequest, _impl_.is_buy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 price = 3;
    {PROTOBUF_FIELD_OFFSET(SubmitLimitRequest, _impl_.price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 qty = 4;
    {PROTOBUF_FIELD_OFFSET(SubmitLimitRequest, _impl_.qty_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\31\11\0\0\0\0\0\0"
    "fastob.SubmitLimitRequest"
    "client_id"
  }},
};

PROTOBUF_NOINLINE void SubmitLimitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fastob.SubmitLimitRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  ::memset(&_impl_.is_buy_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.qty_) -
      reinterpret_cast<char*>(&_impl_.is_buy_)) + sizeof(_impl_.qty_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubmitLimitRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubmitLimitRequest& this_ = static_cast<const SubmitLimitRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubmitLimitRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubmitLimitRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:fastob.SubmitLimitRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client_id = 1;
          if (!this_._internal_client_id().empty()) {
            const std::string& _s = this_._internal_client_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "fastob.SubmitLimitRequest.client_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool is_buy = 2;
          if (this_._internal_is_buy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_is_buy(), target);
          }

          // int32 price = 3;
          if (this_._internal_price() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_price(), target);
          }

          // int32 qty = 4;
          if (this_._internal_qty() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_qty(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:fastob.SubmitLimitRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubmitLimitRequest::ByteSizeLong(const MessageLite& base) {
          const SubmitLimitRequest& this_ = static_cast<const SubmitLimitRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubmitLimitRequest::ByteSizeLong() const {
          const SubmitLimitRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:fastob.SubmitLimitRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string client_id = 1;
            if (!this_._internal_client_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_id());
            }
            // bool is_buy = 2;
            if (this_._internal_is_buy() != 0) {
              total_size += 2;
            }
            // int32 price = 3;
            if (this_._internal_price() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_price());
            }
            // int32 qty = 4;
            if (this_._internal_qty() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_qty());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubmitLimitRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubmitLimitRequest*>(&to_msg);
  auto& from = static_cast<const SubmitLimitRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fastob.SubmitLimitRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if (from._internal_is_buy() != 0) {
    _this->_impl_.is_buy_ = from._impl_.is_buy_;
  }
  if (from._internal_price() != 0) {
    _this->_impl_.price_ = from._impl_.price_;
  }
  if (from._internal_qty() != 0) {
    _this->_impl_.qty_ = from._impl_.qty_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitLimitRequest::CopyFrom(const SubmitLimitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fastob.SubmitLimitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubmitLimitRequest::InternalSwap(SubmitLimitRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, &other->_impl_.client_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubmitLimitRequest, _impl_.qty_)
      + sizeof(SubmitLimitRequest::_impl_.qty_)
      - PROTOBUF_FIELD_OFFSET(SubmitLimitRequest, _impl_.is_buy_)>(
          reinterpret_cast<char*>(&_impl_.is_buy_),
          reinterpret_cast<char*>(&other->_impl_.is_buy_));
}

::google::protobuf::Metadata SubmitLimitRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubmitMarketRequest::_Internal {
 public:
};

SubmitMarketRequest::SubmitMarketRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fastob.SubmitMarketRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubmitMarketRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::fastob::SubmitMarketRequest& from_msg)
      : client_id_(arena, from.client_id_),
        _cached_size_{0} {}

SubmitMarketRequest::SubmitMarketRequest(
    ::google::protobuf::Arena* arena,
    const SubmitMarketRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubmitMarketRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_buy_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_buy_),
           offsetof(Impl_, qty_) -
               offsetof(Impl_, is_buy_) +
               sizeof(Impl_::qty_));

  // @@protoc_insertion_point(copy_constructor:fastob.SubmitMarketRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubmitMarketRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : client_id_(arena),
        _cached_size_{0} {}

inline void SubmitMarketRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_buy_),
           0,
           offsetof(Impl_, qty_) -
               offsetof(Impl_, is_buy_) +
               sizeof(Impl_::qty_));
}
SubmitMarketRequest::~SubmitMarketRequest() {
  // @@protoc_insertion_point(destructor:fastob.SubmitMarketRequest)
  SharedDtor(*this);
}
inline void SubmitMarketRequest::SharedDtor(MessageLite& self) {
  SubmitMarketRequest& this_ = static_cast<SubmitMarketRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.client_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubmitMarketRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubmitMarketRequest(arena);
}
constexpr auto SubmitMarketRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubmitMarketRequest),
                                            alignof(SubmitMarketRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubmitMarketRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubmitMarketRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubmitMarketRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubmitMarketRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubmitMarketRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubmitMarketRequest>(), &SubmitMarketRequest::ByteSizeLong,
            &SubmitMarketRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubmitMarketRequest, _impl_._cached_size_),
        false,
    },
    &SubmitMarketRequest::kDescriptorMethods,
    &descriptor_table_order_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubmitMarketRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 44, 2> SubmitMarketRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fastob::SubmitMarketRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string client_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitMarketRequest, _impl_.client_id_)}},
    // bool is_buy = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubmitMarketRequest, _impl_.is_buy_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitMarketRequest, _impl_.is_buy_)}},
    // int32 qty = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubmitMarketRequest, _impl_.qty_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitMarketRequest, _impl_.qty_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string client_id = 1;
    {PROTOBUF_FIELD_OFFSET(SubmitMarketRequest, _impl_.client_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_buy = 2;
    {PROTOBUF_FIELD_OFFSET(SubmitMarketRequest, _impl_.is_buy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 qty = 3;
    {PROTOBUF_FIELD_OFFSET(SubmitMarketRequest, _impl_.qty_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\32\11\0\0\0\0\0\0"
    "fastob.SubmitMarketRequest"
    "client_id"
  }},
};

PROTOBUF_NOINLINE void SubmitMarketRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fastob.SubmitMarketRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  ::memset(&_impl_.is_buy_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.qty_) -
      reinterpret_cast<char*>(&_impl_.is_buy_)) + sizeof(_impl_.qty_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubmitMarketRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubmitMarketRequest& this_ = static_cast<const SubmitMarketRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubmitMarketRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubmitMarketRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:fastob.SubmitMarketRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client_id = 1;
          if (!this_._internal_client_id().empty()) {
            const std::string& _s = this_._internal_client_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "fastob.SubmitMarketRequest.client_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool is_buy = 2;
          if (this_._internal_is_buy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_is_buy(), target);
          }

          // int32 qty = 3;
          if (this_._internal_qty() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_qty(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:fastob.SubmitMarketRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubmitMarketRequest::ByteSizeLong(const MessageLite& base) {
          const SubmitMarketRequest& this_ = static_cast<const SubmitMarketRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubmitMarketRequest::ByteSizeLong() const {
          const SubmitMarketRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:fastob.SubmitMarketRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string client_id = 1;
            if (!this_._internal_client_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_id());
            }
            // bool is_buy = 2;
            if (this_._internal_is_buy() != 0) {
              total_size += 2;
            }
            // int32 qty = 3;
            if (this_._internal_qty() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_qty());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubmitMarketRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubmitMarketRequest*>(&to_msg);
  auto& from = static_cast<const SubmitMarketRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fastob.SubmitMarketRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if (from._internal_is_buy() != 0) {
    _this->_impl_.is_buy_ = from._impl_.is_buy_;
  }
  if (from._internal_qty() != 0) {
    _this->_impl_.qty_ = from._impl_.qty_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitMarketRequest::CopyFrom(const SubmitMarketRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fastob.SubmitMarketRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubmitMarketRequest::InternalSwap(SubmitMarketRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, &other->_impl_.client_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubmitMarketRequest, _impl_.qty_)
      + sizeof(SubmitMarketRequest::_impl_.qty_)
      - PROTOBUF_FIELD_OFFSET(SubmitMarketRequest, _impl_.is_buy_)>(
          reinterpret_cast<char*>(&_impl_.is_buy_),
          reinterpret_cast<char*>(&other->_impl_.is_buy_));
}

::google::protobuf::Metadata SubmitMarketRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubmitCancelRequest::_Internal {
 public:
};

SubmitCancelRequest::SubmitCancelRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fastob.SubmitCancelRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubmitCancelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::fastob::SubmitCancelRequest& from_msg)
      : client_id_(arena, from.client_id_),
        _cached_size_{0} {}

SubmitCancelRequest::SubmitCancelRequest(
    ::google::protobuf::Arena* arena,
    const SubmitCancelRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubmitCancelRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_buy_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_buy_),
           offsetof(Impl_, qty_) -
               offsetof(Impl_, is_buy_) +
               sizeof(Impl_::qty_));

  // @@protoc_insertion_point(copy_constructor:fastob.SubmitCancelRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubmitCancelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : client_id_(arena),
        _cached_size_{0} {}

inline void SubmitCancelRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_buy_),
           0,
           offsetof(Impl_, qty_) -
               offsetof(Impl_, is_buy_) +
               sizeof(Impl_::qty_));
}
SubmitCancelRequest::~SubmitCancelRequest() {
  // @@protoc_insertion_point(destructor:fastob.SubmitCancelRequest)
  SharedDtor(*this);
}
inline void SubmitCancelRequest::SharedDtor(MessageLite& self) {
  SubmitCancelRequest& this_ = static_cast<SubmitCancelRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.client_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubmitCancelRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubmitCancelRequest(arena);
}
constexpr auto SubmitCancelRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubmitCancelRequest),
                                            alignof(SubmitCancelRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubmitCancelRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubmitCancelRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubmitCancelRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubmitCancelRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubmitCancelRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubmitCancelRequest>(), &SubmitCancelRequest::ByteSizeLong,
            &SubmitCancelRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubmitCancelRequest, _impl_._cached_size_),
        false,
    },
    &SubmitCancelRequest::kDescriptorMethods,
    &descriptor_table_order_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubmitCancelRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 44, 2> SubmitCancelRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fastob::SubmitCancelRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 qty = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubmitCancelRequest, _impl_.qty_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitCancelRequest, _impl_.qty_)}},
    // string client_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitCancelRequest, _impl_.client_id_)}},
    // bool is_buy = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubmitCancelRequest, _impl_.is_buy_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitCancelRequest, _impl_.is_buy_)}},
    // int32 price = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubmitCancelRequest, _impl_.price_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitCancelRequest, _impl_.price_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string client_id = 1;
    {PROTOBUF_FIELD_OFFSET(SubmitCancelRequest, _impl_.client_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_buy = 2;
    {PROTOBUF_FIELD_OFFSET(SubmitCancelRequest, _impl_.is_buy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 price = 3;
    {PROTOBUF_FIELD_OFFSET(SubmitCancelRequest, _impl_.price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 qty = 4;
    {PROTOBUF_FIELD_OFFSET(SubmitCancelRequest, _impl_.qty_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\32\11\0\0\0\0\0\0"
    "fastob.SubmitCancelRequest"
    "client_id"
  }},
};

PROTOBUF_NOINLINE void SubmitCancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fastob.SubmitCancelRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  ::memset(&_impl_.is_buy_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.qty_) -
      reinterpret_cast<char*>(&_impl_.is_buy_)) + sizeof(_impl_.qty_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubmitCancelRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubmitCancelRequest& this_ = static_cast<const SubmitCancelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubmitCancelRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubmitCancelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:fastob.SubmitCancelRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client_id = 1;
          if (!this_._internal_client_id().empty()) {
            const std::string& _s = this_._internal_client_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "fastob.SubmitCancelRequest.client_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool is_buy = 2;
          if (this_._internal_is_buy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_is_buy(), target);
          }

          // int32 price = 3;
          if (this_._internal_price() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_price(), target);
          }

          // int32 qty = 4;
          if (this_._internal_qty() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_qty(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:fastob.SubmitCancelRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubmitCancelRequest::ByteSizeLong(const MessageLite& base) {
          const SubmitCancelRequest& this_ = static_cast<const SubmitCancelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubmitCancelRequest::ByteSizeLong() const {
          const SubmitCancelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:fastob.SubmitCancelRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string client_id = 1;
            if (!this_._internal_client_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_id());
            }
            // bool is_buy = 2;
            if (this_._internal_is_buy() != 0) {
              total_size += 2;
            }
            // int32 price = 3;
            if (this_._internal_price() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_price());
            }
            // int32 qty = 4;
            if (this_._internal_qty() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_qty());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubmitCancelRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubmitCancelRequest*>(&to_msg);
  auto& from = static_cast<const SubmitCancelRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fastob.SubmitCancelRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if (from._internal_is_buy() != 0) {
    _this->_impl_.is_buy_ = from._impl_.is_buy_;
  }
  if (from._internal_price() != 0) {
    _this->_impl_.price_ = from._impl_.price_;
  }
  if (from._internal_qty() != 0) {
    _this->_impl_.qty_ = from._impl_.qty_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitCancelRequest::CopyFrom(const SubmitCancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fastob.SubmitCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubmitCancelRequest::InternalSwap(SubmitCancelRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, &other->_impl_.client_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubmitCancelRequest, _impl_.qty_)
      + sizeof(SubmitCancelRequest::_impl_.qty_)
      - PROTOBUF_FIELD_OFFSET(SubmitCancelRequest, _impl_.is_buy_)>(
          reinterpret_cast<char*>(&_impl_.is_buy_),
          reinterpret_cast<char*>(&other->_impl_.is_buy_));
}

::google::protobuf::Metadata SubmitCancelRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Ack::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Ack>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Ack, _impl_._has_bits_);
};

Ack::Ack(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fastob.Ack)
}
inline PROTOBUF_NDEBUG_INLINE Ack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::fastob::Ack& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

Ack::Ack(
    ::google::protobuf::Arena* arena,
    const Ack& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Ack* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.meta_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fastob::OrderMeta>(
                              arena, *from._impl_.meta_)
                        : nullptr;
  _impl_.ok_ = from._impl_.ok_;

  // @@protoc_insertion_point(copy_constructor:fastob.Ack)
}
inline PROTOBUF_NDEBUG_INLINE Ack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        message_(arena) {}

inline void Ack::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, meta_),
           0,
           offsetof(Impl_, ok_) -
               offsetof(Impl_, meta_) +
               sizeof(Impl_::ok_));
}
Ack::~Ack() {
  // @@protoc_insertion_point(destructor:fastob.Ack)
  SharedDtor(*this);
}
inline void Ack::SharedDtor(MessageLite& self) {
  Ack& this_ = static_cast<Ack&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.meta_;
  this_._impl_.~Impl_();
}

inline void* Ack::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Ack(arena);
}
constexpr auto Ack::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Ack),
                                            alignof(Ack));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Ack::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Ack_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Ack::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Ack>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Ack::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Ack>(), &Ack::ByteSizeLong,
            &Ack::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Ack, _impl_._cached_size_),
        false,
    },
    &Ack::kDescriptorMethods,
    &descriptor_table_order_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Ack::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 26, 2> Ack::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Ack, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fastob::Ack>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool ok = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Ack, _impl_.ok_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Ack, _impl_.ok_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Ack, _impl_.message_)}},
    // .fastob.OrderMeta meta = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Ack, _impl_.meta_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool ok = 1;
    {PROTOBUF_FIELD_OFFSET(Ack, _impl_.ok_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(Ack, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .fastob.OrderMeta meta = 3;
    {PROTOBUF_FIELD_OFFSET(Ack, _impl_.meta_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fastob::OrderMeta>()},
  }}, {{
    "\12\0\7\0\0\0\0\0"
    "fastob.Ack"
    "message"
  }},
};

PROTOBUF_NOINLINE void Ack::Clear() {
// @@protoc_insertion_point(message_clear_start:fastob.Ack)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.meta_ != nullptr);
    _impl_.meta_->Clear();
  }
  _impl_.ok_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Ack::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Ack& this_ = static_cast<const Ack&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Ack::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Ack& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:fastob.Ack)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool ok = 1;
          if (this_._internal_ok() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_ok(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "fastob.Ack.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .fastob.OrderMeta meta = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.meta_, this_._impl_.meta_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:fastob.Ack)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Ack::ByteSizeLong(const MessageLite& base) {
          const Ack& this_ = static_cast<const Ack&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Ack::ByteSizeLong() const {
          const Ack& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:fastob.Ack)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
           {
            // .fastob.OrderMeta meta = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.meta_);
            }
          }
           {
            // bool ok = 1;
            if (this_._internal_ok() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Ack::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Ack*>(&to_msg);
  auto& from = static_cast<const Ack&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fastob.Ack)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.meta_ != nullptr);
    if (_this->_impl_.meta_ == nullptr) {
      _this->_impl_.meta_ =
          ::google::protobuf::Message::CopyConstruct<::fastob::OrderMeta>(arena, *from._impl_.meta_);
    } else {
      _this->_impl_.meta_->MergeFrom(*from._impl_.meta_);
    }
  }
  if (from._internal_ok() != 0) {
    _this->_impl_.ok_ = from._impl_.ok_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Ack::CopyFrom(const Ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fastob.Ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Ack::InternalSwap(Ack* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Ack, _impl_.ok_)
      + sizeof(Ack::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(Ack, _impl_.meta_)>(
          reinterpret_cast<char*>(&_impl_.meta_),
          reinterpret_cast<char*>(&other->_impl_.meta_));
}

::google::protobuf::Metadata Ack::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TopRequest::_Internal {
 public:
};

TopRequest::TopRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:fastob.TopRequest)
}
TopRequest::TopRequest(
    ::google::protobuf::Arena* arena,
    const TopRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TopRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:fastob.TopRequest)
}

inline void* TopRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TopRequest(arena);
}
constexpr auto TopRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TopRequest),
                                            alignof(TopRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TopRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TopRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TopRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<TopRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TopRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<TopRequest>(), &TopRequest::ByteSizeLong,
            &TopRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TopRequest, _impl_._cached_size_),
        false,
    },
    &TopRequest::kDescriptorMethods,
    &descriptor_table_order_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TopRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TopRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fastob::TopRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata TopRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TopReply::_Internal {
 public:
};

TopReply::TopReply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fastob.TopReply)
}
TopReply::TopReply(
    ::google::protobuf::Arena* arena, const TopReply& from)
    : TopReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TopReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TopReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, best_bid_),
           0,
           offsetof(Impl_, best_ask_) -
               offsetof(Impl_, best_bid_) +
               sizeof(Impl_::best_ask_));
}
TopReply::~TopReply() {
  // @@protoc_insertion_point(destructor:fastob.TopReply)
  SharedDtor(*this);
}
inline void TopReply::SharedDtor(MessageLite& self) {
  TopReply& this_ = static_cast<TopReply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TopReply::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TopReply(arena);
}
constexpr auto TopReply::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TopReply),
                                            alignof(TopReply));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TopReply::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TopReply_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TopReply::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TopReply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TopReply::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TopReply>(), &TopReply::ByteSizeLong,
            &TopReply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TopReply, _impl_._cached_size_),
        false,
    },
    &TopReply::kDescriptorMethods,
    &descriptor_table_order_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TopReply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TopReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fastob::TopReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 best_ask = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TopReply, _impl_.best_ask_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TopReply, _impl_.best_ask_)}},
    // int32 best_bid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TopReply, _impl_.best_bid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TopReply, _impl_.best_bid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 best_bid = 1;
    {PROTOBUF_FIELD_OFFSET(TopReply, _impl_.best_bid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 best_ask = 2;
    {PROTOBUF_FIELD_OFFSET(TopReply, _impl_.best_ask_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TopReply::Clear() {
// @@protoc_insertion_point(message_clear_start:fastob.TopReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.best_bid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.best_ask_) -
      reinterpret_cast<char*>(&_impl_.best_bid_)) + sizeof(_impl_.best_ask_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TopReply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TopReply& this_ = static_cast<const TopReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TopReply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TopReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:fastob.TopReply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 best_bid = 1;
          if (this_._internal_best_bid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_best_bid(), target);
          }

          // int32 best_ask = 2;
          if (this_._internal_best_ask() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_best_ask(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:fastob.TopReply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TopReply::ByteSizeLong(const MessageLite& base) {
          const TopReply& this_ = static_cast<const TopReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TopReply::ByteSizeLong() const {
          const TopReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:fastob.TopReply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 best_bid = 1;
            if (this_._internal_best_bid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_best_bid());
            }
            // int32 best_ask = 2;
            if (this_._internal_best_ask() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_best_ask());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TopReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TopReply*>(&to_msg);
  auto& from = static_cast<const TopReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fastob.TopReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_best_bid() != 0) {
    _this->_impl_.best_bid_ = from._impl_.best_bid_;
  }
  if (from._internal_best_ask() != 0) {
    _this->_impl_.best_ask_ = from._impl_.best_ask_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TopReply::CopyFrom(const TopReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fastob.TopReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TopReply::InternalSwap(TopReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TopReply, _impl_.best_ask_)
      + sizeof(TopReply::_impl_.best_ask_)
      - PROTOBUF_FIELD_OFFSET(TopReply, _impl_.best_bid_)>(
          reinterpret_cast<char*>(&_impl_.best_bid_),
          reinterpret_cast<char*>(&other->_impl_.best_bid_));
}

::google::protobuf::Metadata TopReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StatsRequest::_Internal {
 public:
};

StatsRequest::StatsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:fastob.StatsRequest)
}
StatsRequest::StatsRequest(
    ::google::protobuf::Arena* arena,
    const StatsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StatsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:fastob.StatsRequest)
}

inline void* StatsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StatsRequest(arena);
}
constexpr auto StatsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StatsRequest),
                                            alignof(StatsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StatsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StatsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StatsRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<StatsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StatsRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<StatsRequest>(), &StatsRequest::ByteSizeLong,
            &StatsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StatsRequest, _impl_._cached_size_),
        false,
    },
    &StatsRequest::kDescriptorMethods,
    &descriptor_table_order_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StatsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> StatsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fastob::StatsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata StatsRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StatsReply::_Internal {
 public:
};

StatsReply::StatsReply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fastob.StatsReply)
}
StatsReply::StatsReply(
    ::google::protobuf::Arena* arena, const StatsReply& from)
    : StatsReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StatsReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StatsReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_orders_),
           0,
           offsetof(Impl_, avg_latency_us_) -
               offsetof(Impl_, total_orders_) +
               sizeof(Impl_::avg_latency_us_));
}
StatsReply::~StatsReply() {
  // @@protoc_insertion_point(destructor:fastob.StatsReply)
  SharedDtor(*this);
}
inline void StatsReply::SharedDtor(MessageLite& self) {
  StatsReply& this_ = static_cast<StatsReply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* StatsReply::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StatsReply(arena);
}
constexpr auto StatsReply::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StatsReply),
                                            alignof(StatsReply));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StatsReply::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StatsReply_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StatsReply::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StatsReply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StatsReply::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StatsReply>(), &StatsReply::ByteSizeLong,
            &StatsReply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StatsReply, _impl_._cached_size_),
        false,
    },
    &StatsReply::kDescriptorMethods,
    &descriptor_table_order_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StatsReply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> StatsReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fastob::StatsReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 total_orders = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StatsReply, _impl_.total_orders_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StatsReply, _impl_.total_orders_)}},
    // uint64 total_rejected = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StatsReply, _impl_.total_rejected_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(StatsReply, _impl_.total_rejected_)}},
    // double avg_latency_us = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(StatsReply, _impl_.avg_latency_us_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 total_orders = 1;
    {PROTOBUF_FIELD_OFFSET(StatsReply, _impl_.total_orders_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 total_rejected = 2;
    {PROTOBUF_FIELD_OFFSET(StatsReply, _impl_.total_rejected_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // double avg_latency_us = 3;
    {PROTOBUF_FIELD_OFFSET(StatsReply, _impl_.avg_latency_us_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void StatsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:fastob.StatsReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.total_orders_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.avg_latency_us_) -
      reinterpret_cast<char*>(&_impl_.total_orders_)) + sizeof(_impl_.avg_latency_us_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StatsReply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StatsReply& this_ = static_cast<const StatsReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StatsReply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StatsReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:fastob.StatsReply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 total_orders = 1;
          if (this_._internal_total_orders() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_total_orders(), target);
          }

          // uint64 total_rejected = 2;
          if (this_._internal_total_rejected() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_total_rejected(), target);
          }

          // double avg_latency_us = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_avg_latency_us()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_avg_latency_us(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:fastob.StatsReply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StatsReply::ByteSizeLong(const MessageLite& base) {
          const StatsReply& this_ = static_cast<const StatsReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StatsReply::ByteSizeLong() const {
          const StatsReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:fastob.StatsReply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 total_orders = 1;
            if (this_._internal_total_orders() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_total_orders());
            }
            // uint64 total_rejected = 2;
            if (this_._internal_total_rejected() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_total_rejected());
            }
            // double avg_latency_us = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_avg_latency_us()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StatsReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StatsReply*>(&to_msg);
  auto& from = static_cast<const StatsReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fastob.StatsReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_total_orders() != 0) {
    _this->_impl_.total_orders_ = from._impl_.total_orders_;
  }
  if (from._internal_total_rejected() != 0) {
    _this->_impl_.total_rejected_ = from._impl_.total_rejected_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_avg_latency_us()) != 0) {
    _this->_impl_.avg_latency_us_ = from._impl_.avg_latency_us_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StatsReply::CopyFrom(const StatsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fastob.StatsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StatsReply::InternalSwap(StatsReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StatsReply, _impl_.avg_latency_us_)
      + sizeof(StatsReply::_impl_.avg_latency_us_)
      - PROTOBUF_FIELD_OFFSET(StatsReply, _impl_.total_orders_)>(
          reinterpret_cast<char*>(&_impl_.total_orders_),
          reinterpret_cast<char*>(&other->_impl_.total_orders_));
}

::google::protobuf::Metadata StatsReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace fastob
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_order_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
